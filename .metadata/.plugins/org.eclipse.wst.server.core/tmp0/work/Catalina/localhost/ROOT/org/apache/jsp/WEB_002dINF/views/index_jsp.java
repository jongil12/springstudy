/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-07 03:17:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/summernote-lite.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("        var loginChk = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginChk}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("        if(loginChk == \"fail\"){\r\n");
      out.write("        	alert(\"비밀번호틀림\");\r\n");
      out.write("        	return;\r\n");
      out.write("        }else if(loginChk == \"ok\"){\r\n");
      out.write("        	$(\"#login\").css(\"display\", \"none\"); 	//감추기\r\n");
      out.write("        	$(\"#login_ok\").css(\"display\", \"block\"); //나타내기\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function go_members() {\r\n");
      out.write("		location.href = \"/members_list.do\";\r\n");
      out.write("	}\r\n");
      out.write("	function go_guestbook() {\r\n");
      out.write("		location.href = \"/guestbook_list.do\";\r\n");
      out.write("	}\r\n");
      out.write("	function go_guestbook2() {\r\n");
      out.write("		location.href = \"/guestbook2_list.do\";\r\n");
      out.write("	}\r\n");
      out.write("	function reg_add_go() {\r\n");
      out.write("		location.href =\"/member_reg.do\"	\r\n");
      out.write("	}\r\n");
      out.write("	function member_logout() {\r\n");
      out.write("		location.href =\"/member_logout.do\"	\r\n");
      out.write("	}\r\n");
      out.write("	function go_bbs() {\r\n");
      out.write("		location.href =\"/bbs_list.do\"	\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<button onclick=\"go_members()\">Members</button>\r\n");
      out.write("	<button onclick=\"go_guestbook()\">GuestBook</button>\r\n");
      out.write("	<button onclick=\"go_guestbook2()\">GuestBook2</button>\r\n");
      out.write("	<button onclick=\"go_bbs()\">BBS</button>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<div id=\"login\" style=\"margin: 30px;\">\r\n");
      out.write("	<form action=\"/member_login.do\" method=\"post\">	\r\n");
      out.write("			<p> ID : <input type=\"text\" name=\"m_id\" size=\"20\" required /></p>\r\n");
      out.write("			<p> PW : <input type=\"password\" name=\"m_pw\" size=\"20\" required /></p>\r\n");
      out.write("			<input type=\"submit\" value=\"로그인\" />\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"login_ok\" style=\"display: none;\">\r\n");
      out.write("		<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m2vo.m_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님 로그인 성공</h2>\r\n");
      out.write("		<button onclick=\"member_logout()\">로그아웃 </button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"btns\" style=\"margin: 30px;\">\r\n");
      out.write("	<button onclick=\"reg_add_go()\">회원가입 </button>\r\n");
      out.write("	<button onclick=\"id_find_go()\">아이디찾기 </button>\r\n");
      out.write("	<button onclick=\"pw_find_go()\">비번찾기 </button>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
